<templateSet group="Java">
  <template name="singleton" value="&#10;&#9; &#10;&#9;    private volatile static $CLASS_NAME$ _instance;&#10;&#9; &#10;&#9;    private $CLASS_NAME$() {&#10;&#9;        // preventing Singleton object instantiation from outside&#10;&#9;    }&#10;&#9; &#10;&#9;    public static $CLASS_NAME$ getInstanceDC() {&#10;&#9;        if (_instance == null) {&#10;&#9;            synchronized ($CLASS_NAME$.class) {&#10;&#9;                if (_instance == null) {&#10;&#9;                    _instance = new $CLASS_NAME$();&#10;&#9;                }&#10;&#9;            }&#10;&#9;        }&#10;&#9;        return _instance;&#10;&#9;    }&#10;" description="Singleton with double lock checking" toReformat="true" toShortenFQNames="true">
    <variable name="CLASS_NAME" expression="className()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="psfl" value="private static final Logger log = Logger.getLogger($CLASS_NAME$.class);" description="public static final Logger" toReformat="false" toShortenFQNames="true">
    <variable name="CLASS_NAME" expression="className()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
</templateSet>